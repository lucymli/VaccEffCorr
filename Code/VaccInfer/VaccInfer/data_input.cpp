//
//  data.cpp
//  VaccInfer
//
//  Created by Lucy Li on 2/13/17.
//  Copyright Â© 2017 Lucy M Li, CCDD, HSPH. All rights reserved.
//

#include "data.hpp"



Data::Data () {
    n_ind = 200;
    n_time = 6;
    n_tot = 33;
    n_vtypes = 13;
    n_covariates = 2;
    n_predictors = 13;
    double times_array[6] = {6, 7, 12, 13, 18, 24};
    times.reserve(n_time);
    std::copy(times_array, times_array+n_time, std::back_inserter(times));
    double carriage_array[1200] = // n_ind * n_time
    {
        2, 0, 29, 0, 13, 26,
        5, 19, 30, 0, 0, 0,
        0, 0, 0, 28, 0, 0,
        0, 18, 18, 0, 33, 0,
        0, 0, 0, 4, 0, 0,
        4, 0, 0, 0, 10, 32,
        0, 19, 0, 30, 30, 0,
        0, 18, 18, 0, 0, 14,
        21, 21, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 2,
        0, 0, 0, 12, 12, 27,
        0, 0, 0, 23, 23, 0,
        26, 0, 0, 17, 0, 22,
        0, 0, 0, 0, 0, 0,
        27, 7, 7, 0, 14, 14,
        29, 33, 33, 33, 33, 0,
        0, 0, 0, 10, 10, 0,
        24, 16, 0, 32, 32, 0,
        8, 0, 0, 0, 0, 13,
        0, 12, 12, 0, 0, 18,
        0, 12, 0, 25, 0, 28,
        1, 12, 0, 14, 14, 0,
        0, 7, 7, 28, 28, 0,
        0, 0, 0, 0, 0, 0,
        4, 10, 0, 27, 0, 21,
        0, 32, 0, 23, 0, 20,
        0, 3, 3, 4, 0, 0,
        2, 0, 0, 3, 3, 26,
        0, 0, 0, 0, 16, 0,
        11, 0, 0, 15, 19, 20,
        13, 31, 31, 8, 8, 30,
        0, 0, 0, 24, 0, 30,
        0, 0, 0, 10, 0, 30,
        11, 11, 11, 0, 0, 25,
        0, 14, 22, 3, 3, 28,
        0, 7, 7, 0, 32, 10,
        0, 18, 18, 0, 0, 21,
        0, 27, 27, 2, 2, 0,
        29, 30, 30, 17, 17, 15,
        0, 15, 15, 0, 0, 0,
        0, 2, 0, 5, 4, 0,
        0, 0, 0, 32, 32, 21,
        30, 0, 5, 11, 0, 0,
        1, 0, 0, 23, 0, 25,
        19, 19, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 33,
        23, 0, 3, 0, 0, 2,
        16, 28, 15, 0, 0, 0,
        20, 0, 0, 10, 0, 7,
        27, 0, 0, 0, 22, 0,
        0, 11, 13, 0, 0, 18,
        28, 31, 0, 14, 14, 0,
        0, 23, 23, 0, 0, 0,
        25, 4, 24, 0, 0, 22,
        0, 9, 9, 23, 0, 7,
        0, 19, 19, 28, 28, 0,
        0, 26, 0, 0, 1, 29,
        4, 27, 27, 27, 17, 0,
        6, 0, 26, 33, 28, 28,
        18, 2, 0, 0, 29, 14,
        2, 7, 0, 19, 19, 0,
        18, 0, 0, 0, 0, 2,
        0, 32, 0, 0, 6, 17,
        0, 0, 0, 0, 33, 4,
        0, 14, 0, 0, 0, 0,
        16, 0, 0, 0, 11, 0,
        0, 0, 10, 1, 13, 18,
        0, 0, 0, 11, 0, 13,
        0, 0, 0, 0, 0, 6,
        4, 1, 0, 30, 30, 27,
        14, 1, 18, 16, 16, 21,
        0, 0, 0, 22, 22, 0,
        22, 2, 0, 3, 0, 32,
        23, 30, 9, 0, 20, 0,
        10, 27, 27, 27, 27, 32,
        0, 25, 25, 1, 1, 22,
        12, 32, 22, 3, 10, 18,
        0, 14, 14, 1, 1, 3,
        0, 0, 0, 10, 20, 0,
        0, 0, 0, 23, 23, 19,
        5, 0, 32, 3, 1, 15,
        0, 29, 21, 0, 0, 0,
        0, 19, 19, 18, 0, 23,
        27, 0, 4, 0, 20, 0,
        0, 16, 16, 0, 23, 30,
        32, 10, 10, 0, 0, 26,
        3, 23, 0, 0, 0, 4,
        0, 0, 0, 0, 0, 27,
        0, 0, 3, 18, 16, 6,
        0, 13, 12, 25, 25, 0,
        0, 0, 0, 32, 0, 0,
        5, 4, 0, 19, 0, 0,
        0, 0, 0, 32, 0, 0,
        22, 0, 0, 0, 0, 2,
        0, 10, 23, 3, 31, 25,
        29, 27, 27, 0, 4, 0,
        0, 21, 0, 10, 10, 32,
        0, 8, 8, 4, 4, 28,
        0, 0, 14, 1, 33, 0,
        0, 0, 0, 0, 3, 23
    };
    carriage.reserve(n_ind*n_time);
    std::copy(carriage_array, carriage_array + n_ind*n_time, std::back_inserter(carriage));
//    double metadata_array[400] = // n_ind * n_covariates
//    {
//        // Age in days at enrollment (first dose of vaccine):
//        61, 60, 60, 57, 62, 69, 57, 45, 44, 57, 59, 61, 61, 53, 64, 58, 49, 76, 64, 55, 51, 49, 59, 63, 61, 76, 61, 67, 79, 60, 62, 73, 74, 62, 70, 62, 88, 70, 57, 61, 59, 56, 64, 69, 62, 60, 63, 62, 64, 60, 67, 62, 75, 66, 75, 82, 69, 56, 61, 61, 55, 61, 75, 92, 83, 62, 96, 51, 57, 65, 69, 79, 83, 62, 59, 87, 67, 68, 88, 66, 72, 67, 66, 67, 91, 71, 75, 66, 61, 62, 62, 67, 92, 69, 61, 61, 66, 68, 72, 81, 65, 64, 71, 73, 90, 84, 63, 66, 75, 77, 64, 66, 73, 75, 62, 64, 66, 70, 70, 88, 64, 74, 88, 64, 69, 62, 75, 64, 67, 76, 78, 53, 75, 73, 75, 62, 59, 68, 68, 60, 65, 75, 61, 64, 63, 68, 76, 66, 61, 66, 71, 62, 59, 63, 65, 83, 58, 59, 75, 70, 78, 86, 59, 89, 56, 75, 67, 65, 65, 61, 60, 55, 66, 70, 64, 73, 65, 66, 64, 60, 88, 64, 75, 66, 63, 87, 69, 73, 77, 92, 63, 72, 63, 75, 65, 69, 62, 63, 88, 68,
//        // Number of days between last infant vaccine dose (at 6 month visit) and blood draw to measure antibody levels (at 7 month visit):
//        56, 56, 49, 56, 56, 49, 56, 70, 70, 56, 56, 70, 49, 70, 56, 56, 70, 42, 35, 42, 49, 63, 70, 63, 56, 35, 56, 49, 35, 56, 56, 28, 42, 56, 42, 56, 28, 70, 70, 63, 63, 63, 154, 42, 56, 35, 35, 35, 56, 70, 49, 49, 35, 49, 49, 42, 28, 42, 56, 56, 77, 56, 49, 28, 56, 42, 28, 154, 56, 42, 42, 28, 63, 56, 49, 49, 28, 28, 28, 49, 70, 49, 49, 42, 56, 49, 35, 63, 105, 63, 49, 49, 42, 28, 63, 63, 46, 56, 49, 35, 49, 42, 35, 49, 28, 35, 56, 42, 35, 28, 56, 49, 28, 28, 42, 63, 35, 63, 70, 28, 56, 28, 28, 56, 49, 28, 42, 56, 42, 42, 42, 63, 28, 35, 42, 35, 56, 63, 77, 42, 56, 42, 63, 63, 56, 35, 42, 28, 35, 49, 42, 56, 63, 42, 42, 35, 63, 47, 42, 56, 42, 28, 49, 42, 63, 49, 35, 42, 42, 63, 49, 56, 49, 28, 56, 35, 49, 35, 56, 77, 28, 49, 84, 35, 77, 35, 56, 56, 28, 49, 56, 28, 56, 42, 56, 49, 63, 77, 28, 49
//    };
//    std::copy(metadata_array, metadata_array + n_ind*n_covariates, std::back_inserter(metadata));
//    metadata_corr.resize(6); // 3 * n_covariates
//    metadata_corr_file = "metadata_corr_file.txt";
    double predictors_array[2600] = // n_ind * n_predictors
    {
        0.713, 1.696, 1.252, -0.243, -0.483, 0.097, -0.496, -0.56, 0.743, 0.96, 0.379, 0.489, -0.435,
        0.724, 0.645, 0.776, 0.349, 0.173, 0.582, 0.037, 0.697, 0.018, 0.647, -0.709, 1.191, 1.276,
        -0.016, 0.454, 0.229, 0.889, -0.065, 0.774, -0.827, 0.242, -0.862, -0.065, 1.107, 1.199, 1.21,
        -0.816, 1.388, 0.235, 0.316, 0.075, -0.347, 0.878, 0.559, -0.317, 0.633, 0.568, 0.035, 1.237,
        0.518, 0.161, -0.571, -0.524, 2.277, -0.778, -0.664, 0.572, 0.738, 0.403, 0.671, 0.524, -0.834,
        0.432, -0.151, -0.229, -0.803, -0.655, 0.518, -0.07, 0.337, 1.625, 0.038, -0.3, -0.321, -0.836,
        0.064, -0.163, 0.574, 0.333, 0.584, -0.248, 1.084, 0.783, -0.024, -0.258, 0.003, 1.314, 0.549,
        0.635, -0.331, 0.329, 0.567, 1.205, -0.33, 0.428, 0.534, -0.226, 0.734, -0.378, 0.517, -0.012,
        0.835, -0.316, 0.214, 0.1, -0.586, 0.272, 0.365, 1.381, -0.707, -0.397, 1.093, 0.181, 0.173,
        0.778, 1.105, 0.616, -0.487, -1.052, -0.499, 0.012, 0.278, 0.398, 1.461, 0.323, 0.562, 0.104,
        0.637, 0.658, 0.391, 0.047, 0.156, 0.938, 0.66, 1.374, -0.604, 0.041, 1.485, -0.401, 0.727,
        0.12, 0.192, 1.304, 1.543, 0.347, 0.18, 1.007, 0.367, 1.468, 0.568, -0.199, 0.002, -0.41,
        -0.077, -0.198, 0.431, -1.094, 0.341, -0.215, 1.708, -0.415, 0.056, 0.179, -0.709, 1.105, -0.823,
        1.222, 0.912, 1.198, 1.206, -0.484, -0.129, -0.031, 0.417, 0.821, 0.785, 0.135, 1.136, 0.445,
        -0.215, 0.07, 1.938, 0.159, -0.197, 1.33, 0.546, -0.775, -0.655, 0.694, -0.563, 0.416, 1.231,
        0.552, 0.263, -0.875, 0.412, -1.251, 0.111, 1.133, 0.708, -0.807, 0.974, 0.611, 1.125, 1.091,
        0.91, 0.775, 0.699, 0.431, -0.459, -0.801, 0.179, 0.554, 0.338, 1.879, 0.221, 0.223, 0.427,
        0.987, 0.181, -0.343, 0.504, 0.582, 0.125, 0.724, -0.606, 1.078, 1.41, 1.344, -0.149, -0.043,
        1.166, -0.296, 0.772, 0.178, 0.102, 0.678, -0.131, -0.688, 0.567, 1.09, -0.856, 0.675, 0.653,
        -0.347, 0.622, -0.461, -0.656, 0.812, -0.911, -0.089, 0.989, 1.323, 1.225, 0.824, -0.161, -0.183,
        0.004, 1.861, 1.234, -0.27, 0.136, 0.671, 1.567, -0.15, -0.448, 0.966, -0.083, 0.271, 0.874,
        0.071, 0.328, -0.457, 1.009, 0.172, 0.415, 0.921, 0.516, -0.28, 0.089, 0.671, 0.832, -0.262,
        0.011, 0.189, 0.876, 0.147, -0.391, 0.553, 0.745, 0, 0.753, 1.676, -0.212, -0.13, 0.433,
        0.543, 0.768, 0.803, 0.413, 1.096, 0.108, -0.394, 0.985, 0.64, 0.439, 1.105, 0.436, 0.47,
        0.381, 0.273, -0.598, -0.373, 0.251, -0.45, 0.236, -0.303, -0.265, 0.763, 1.064, 1.131, 0.176,
        0.981, 0.82, 0.056, -0.103, 0.239, 0.436, 0.188, 0.528, -0.64, 0.271, 0.194, -0.138, -0.655,
        0.7, 0.174, -0.072, -0.003, 0.559, 0.948, 0.361, 0.118, 0.094, 1.154, 1.047, 0.086, 0.274,
        -0.091, 0.405, 0.488, -0.587, 0.241, 0.03, 1.532, 0.788, -0.181, -0.249, 0.532, 0.494, -0.335,
        0.821, 0.106, -0.847, -0.085, -1.603, -0.473, 0.501, 1.282, 1.361, 0.508, 0.014, -0.294, 0.122,
        -0.98, 0.226, 0.343, -1.151, 1.503, 0.891, 0.386, 1.373, -0.9, -0.182, -0.991, 0.95, -0.454,
        0.611, 0.928, 0.963, 0.411, -0.854, 0.56, 0.015, 0.03, -0.334, 1.575, 0.685, 1.499, 0.036,
        1.928, -0.811, 0.645, 0.482, 0.205, 0.771, 2.016, -0.111, 0.052, -0.346, 0.897, -0.689, 0.871,
        0.869, 0.205, 1.054, 0.17, -1.174, 0.524, 0.928, 0.392, 0.333, -0.564, 0.626, 0.957, -0.335,
        1.485, 0.077, -0.065, 0.837, 0.206, 0.146, 1.054, -0.162, 1.308, 0.723, 0.281, 0.538, -0.566,
        -0.045, -0.955, -0.695, 1.289, 0.382, -0.071, 1.638, 0.321, 0.377, -0.049, 0.75, 1.012, 0.278,
        0.93, 1.462, -1.09, -0.352, 1.266, 0.491, 0.595, -0.073, -1.138, 1.18, -0.024, 1.348, -0.199,
        1.697, 0.614, 0.084, -0.388, 0.698, 0.006, 1.331, -0.445, 0.841, 0.817, 0.154, -0.101, -0.074,
        0.883, -0.953, -1.193, 0.883, 1.179, 1.099, 0.42, 1.058, -0.005, -0.105, 0.194, -0.781, -0.16,
        -0.002, -0.186, 0.023, 1.238, 0.529, 0.552, 0.629, -0.344, 0.886, 0.558, 0.077, -0.194, 0.267,
        0.353, -0.028, -0.318, -1.305, 0.753, 0.684, 0.507, 0.716, 0.447, -1.246, 1.605, 1.172, 0.365,
        0.101, -0.116, 0.763, 0.262, 0.75, 0.25, -0.087, 0.827, 0.169, 0.782, 0.517, 0.64, 0.19,
        0.878, 0.184, 1.082, 0.642, 0.067, 0.574, 0.331, 0.963, 1.283, 0.618, 0.504, 1.677, -0.183,
        0.214, 1.181, 0.639, -0.095, -0.297, 0.058, 0.245, -0.514, 0.819, 0.866, 1.094, 0.944, -1.157,
        -0.262, 0.007, 0.524, 0.158, 0.899, 0.875, 0.701, 0.148, 0.473, 0.414, 0.423, 1.026, -0.133,
        1.013, 1.32, -0.001, 0.355, 2.026, -0.755, -0.592, -0.261, 0.023, 1.085, -0.373, -0.034, 0.903,
        -0.652, 1.435, -0.39, 1.329, 0.567, 0.461, 0.631, 0.731, 1.989, 1.086, -0.577, 0.198, 0.547,
        1.252, 0.816, 0.309, 0.415, 0.937, -0.331, -0.777, -0.11, 0.22, 0.287, -0.222, 0.469, 1.057,
        0.148, -0.474, -0.372, 0.198, 0.023, -0.243, -0.207, 1.274, 0.465, 1.368, -1.044, 0.355, 0.71,
        0.71, 0.502, -0.027, -0.08, -0.881, 0.912, 0.114, -0.23, -0.17, 0.123, 0.406, 0.388, 1.363,
        1.906, 0.592, 0.656, 0.784, -1.15, 0.261, 0.522, -0.297, 0.456, 0.589, 1.298, -0.78, 1.251,
        0.23, 0.387, 0.427, 0.276, 1.49, 0.485, 0.139, 0.141, 0.331, 0.22, 0.189, 0.506, -0.175,
        0.336, 0.861, -0.72, 0.513, -0.012, 0.705, -0.39, 0.16, 1.196, -0.229, 0.699, 0.455, -0.221,
        0.419, 0.606, 0.882, 0.557, -0.081, 0.208, 0.892, -0.238, -0.793, -0.881, -0.432, 0.235, 0.676,
        -0.194, -0.208, 0.854, -0.641, 1.744, 0.285, -0.04, 0.558, 0.308, 0.854, -0.384, -0.364, 0.778,
        0.054, 0.286, 0.626, 0.544, -0.122, 0.454, -1.573, 0.462, 0.563, -0.094, -0.081, 0.604, -0.64,
        0.734, 0.101, -0.548, 0.212, -0.74, 1.179, -0.935, 1.098, 0.146, 0.902, 0.329, 0.163, -0.791,
        1.047, -0.121, -0.411, 1.492, 0.831, 1.79, 0.553, 1.093, 0.426, -0.67, 0.613, -0.301, 0.304,
        -0.211, 0.037, 0.786, 0.541, -0.333, -0.641, 1.001, -0.317, 2.214, -0.06, -0.002, 0.039, -0.758,
        0.58, 1.189, -0.407, 0.72, 0.838, 1.089, 0.989, 0.841, -0.037, 0.886, -1.2, 0.252, 0.378,
        0.79, -0.253, -0.067, -0.197, 0.235, 0.01, -1.025, -0.314, 0.402, 0.753, -0.285, -0.289, -0.622,
        -0.406, 0.197, 0.208, 0.579, 0.632, 0.712, 0.044, -0.5, -0.652, -0.984, -1.039, -0.607, 1.713,
        -0.449, 0.769, 0.721, 0.219, -0.939, 1.286, -0.124, -0.195, -1.242, 0.297, 1.234, 0.146, 0.255,
        0.814, 0.862, 1.133, -0.727, 0.019, 0.036, 0.223, 0.267, 0.184, 0.818, 0.492, 0.33, 0.202,
        -0.557, 0.337, -0.558, 0.899, -0.41, 0.845, 0.959, 1.126, 0.384, -0.238, 1.365, 1.196, -0.847,
        -1.494, 0.308, 0.69, -0.789, 0.954, 0.227, -1.07, 0.956, 0.247, 0.057, 1.08, 0.611, 0.81,
        0.264, -0.318, 0.205, -1.012, 0.456, 0.377, 0.361, -0.158, -0.395, -0.065, 0.885, 1.747, -0.019,
        0.585, -0.134, 0.637, 0.07, -0.412, 1.147, -1.098, 0.094, 0.3, 0.061, -0.158, 1.758, 0.394,
        0.702, -1.433, 0.662, -2.114, 0.659, 0.247, -0.273, -0.208, -0.475, 1.139, -2.205, -0.114, 0.841,
        0.7, 0.352, -0.233, -0.161, 0.799, 0.047, 0.402, 0.279, 1.075, -0.505, -0.181, 0.395, 0.797,
        1.516, -0.211, 1.668, -0.118, 0.514, 0.388, -1.09, -0.263, 0.842, 0.015, -0.983, 0.904, 0,
        0.775, 0.734, 0.647, 1.052, 0.54, 0.995, 0.483, -0.169, 0.262, 1.092, -0.032, 0.371, 0.538,
        -0.118, -1.083, -0.318, -0.169, 1.261, -0.571, -0.932, -1.562, 0.121, -0.366, -0.077, -0.273, 2.456,
        0.327, -0.502, 0.318, 0.176, 1.706, 0.536, 1.635, 0.721, 0.484, 0.579, 1.032, -0.756, -0.865,
        0.543, 0.63, 0.175, 0.228, 1.008, -0.449, 0.618, 0.27, 0.957, -0.295, 0.016, 1.184, 1.348,
        0.971, 0.565, 0.676, 0.354, 0.525, -0.593, 0.127, 0.021, 0.884, -0.714, -0.062, 1.523, -0.177,
        1.102, 0.874, 1.441, -0.036, 0.501, 0.557, -0.873, 0.327, -0.311, 0.763, -0.032, -0.217, -0.179,
        0.551, 1.482, 0.039, 1.765, 0.839, 1.195, 0.092, -0.291, -0.494, 0.546, 1.018, -0.284, 0.439,
        1.559, 0.636, 0.131, -1.001, 0.126, -0.754, -0.31, 0.697, 0.808, -0.561, 0.163, -0.246, 0.885,
        0.746, 0.452, 0.867, -0.839, -0.02, 0.798, 0.446, 0.713, -1.006, 0.729, 0.953, 0.636, 0.288,
        -1.317, -0.719, 0.704, 0.43, 0.504, 0.026, 0.139, -0.22, -0.78, 1.115, 0.304, 1.101, -0.217,
        1.297, 1.581, 0.61, 0.611, 0.839, 0.401, 0.761, 0.243, 0.806, -0.116, -0.139, 0.971, 0.781,
        0.654, 0.118, 0.091, -0.23, 0.169, 0.351, -1.306, 0.344, 0.332, -0.257, -0.306, 1.541, -0.387,
        0.259, 1.04, -0.4, 0.706, 0.152, 0.717, -0.141, 0.35, -0.814, 0.763, 1.277, 0.209, -0.379,
        0.436, 1.624, 0.2, 0.239, 1.319, 0.634, 0.633, 1.95, -0.497, 0.473, 0.467, 0.19, 0.117,
        -0.3, 1.069, -0.608, -0.242, 0.504, 0.154, 0.754, -0.257, 0.675, 0.898, 0.442, -0.732, 1.255,
        1.64, -0.891, 1.473, 0.255, -0.411, 0.207, -0.289, -0.024, -0.182, 0.269, 0.807, 0.983, -1.102,
        0.57, 0.112, -0.186, -0.268, -0.069, 0.55, 0.304, 0.457, 0.755, 0.303, 0.963, 0.517, 0.078,
        -0.209, 0.358, -0.609, -1.186, 0.776, 1.748, -0.494, -0.183, 0.892, -0.009, 0.586, -0.379, 0.731,
        0.646, 0.405, 0.556, 0.829, 0.037, 0.153, 0.837, 1.343, 0.245, 0.476, -1.167, 0.983, 1.484,
        -0.7, -0.357, 1.357, 0.348, -0.042, 0.14, 1.232, 0.283, 0.984, 1.526, 0.426, 1.216, -0.241,
        -0.289, -0.878, -0.465, 0.523, 0.815, 0.089, -0.282, 0.173, 0.407, 1.04, 0.626, -0.207, 0.344,
        -0.06, 1.525, 0.786, 0.495, -0.085, 0.302, 0.04, -0.429, 0.916, -0.556, -0.04, 0.244, 0.583,
        -0.386, 0.98, 0.431, 1.108, 0.669, 0.211, -0.22, 0.021, -0.398, 0.189, 0.358, -0.244, 0.162,
        -0.32, 0.958, 0.685, -0.136, -0.064, -0.349, 0.809, 0.986, -0.859, 0.405, 0.638, 0.621, 1.006,
        -0.243, 0.187, -0.301, -0.166, -0.285, 1.065, 0.262, 0.724, -0.578, 0.904, -0.6, 0.45, 0.637,
        -0.112, 0.439, -0.245, 0.903, -0.008, -0.049, 0.613, -0.253, 1.32, 0.643, -0.673, 0.141, 0.507,
        0.468, 0.862, 0.648, -0.014, -0.323, 1.144, -0.301, 1.077, 0.904, -0.667, -0.027, -0.269, 0.821,
        1.821, -0.334, 0.965, 0.177, 0.376, 1.067, 0.872, 1.047, -0.475, 0.948, 0.37, 0.902, 0.292,
        -0.203, -0.506, 0.683, 0.905, 1.358, -0.18, 1.026, -0.031, 0.381, 0.423, 0.302, 0.217, -0.019,
        -0.095, 0.796, -0.594, 0.449, -1.932, 0.2, 1.406, -0.068, 0.861, 0.8, 0.329, 0.413, 0.196
    };
    predictors.reserve(n_ind*n_predictors);
    std::copy(predictors_array, predictors_array + n_ind*n_predictors, std::back_inserter(predictors));
}
